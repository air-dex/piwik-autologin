<?php
/**
 * @file
 * piwik_autologin.module
 * @brief .module file for the Piwik Autologin Drupal module.
 * @author Romain Ducher <r.ducher@agence-codecouleurs.fr>
 * @license https://www.gnu.org/licenses/gpl-3.0.txt
 * @section LICENSE
 *
 * Copyright 2014 Code Couleurs
 *
 * This file is part of Piwik Autologin.
 *
 * Piwik Autologin is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option)
 * any later version.
 *
 * Piwik Autologin is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS OR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * Piwik Autologin. If not, see <http://www.gnu.org/licenses/>.
 */

require_once 'piwik_autologin.backend.inc';

/**
 * Implementing "hook_menu".
 */
function piwik_autologin_menu() {
  $items = array();
  \piwik_autologin\set_module_configuration_menu($items);
  \piwik_autologin\set_piwik_navigation_link($items);
  return $items;
}

/**
 * Implementing hook_user_login.
 *
 * Retrieve the Logme URL for Piwik
 * @see https://api.drupal.org/api/drupal/modules!user!user.api.php/function/hook_user_login/7
 */
function piwik_autologin_user_login(&$edit, $account) {
  \piwik_autologin\set_logme_url($account->uid);
  // Menus depends on the connected user. Refresh them.
  menu_rebuild();
}

/**
 * Implementing hook_user_logout.
 */
function piwik_autologin_user_logout($account) {
  // Disable the link to Piwik.
  \piwik_autologin\Session::setShowNaviLink(FALSE);
  // Menus depends on the connected user. Refresh them.
  menu_rebuild();
}

/**
 * Implementing hook_page_build.
 *
 * @param array $page
 *   Page to build.
 */
function piwik_autologin_page_build(&$page) {
  \piwik_autologin\embed_piwik_iframe($page);
}

/**
 * Implementing hook_form_FORM_ID_alter for user_register_form (hook_form_user_register_form_alter).
 *
 * @param array $form
 *   The form.
 * @param array $form_state
 *   Form state.
 * @param string $form_id
 *   The form ID (here 'user_register_form').
 */
function piwik_autologin_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  // Additional fields for Piwik.
  \piwik_autologin\add_piwik_user_fields($form);
}

/**
 * Implementing hook_form_FORM_ID_alter for user_profile_form (hook_form_user_profile_form_alter).
 *
 * @param array $form
 *   The form.
 * @param array $form_state
 *   Form state.
 * @param string $form_id
 *   The form ID (here 'user_profile_form').
 */
function piwik_autologin_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  // Additional fields for Piwik.
  \piwik_autologin\edit_piwik_user_fields($form, $form['#user']->uid);
}

/**
 * Implementing hook_user_insert.
 *
 * @param array $edit
 *   Submitted values to create the user.
 * @param array $account
 *   User to insert's account informations.
 * @param string $category
 *   The active category of user information being edited.
 */
function piwik_autologin_user_insert(&$edit, $account, $category) {
  // Adding the Piwik equivalent in the Drupal database.
  if ($category == 'account') {
    \piwik_autologin\add_user($edit['piwik_autologin_userlogin'], $edit['piwik_autologin_password'], $edit['uid']);
  }
}

/**
 * Implementing hook_user_update.
 *
 * @param array $edit
 *   Submitted values to update the user.
 * @param array $account
 *   User to update's account informations.
 * @param string $category
 *   The active category of user information being edited.
 */
function piwik_autologin_user_update(&$edit, $account, $category) {
  // Editing the Piwik equivalent in the Drupal database.
  if ($category == 'account') {
    \piwik_autologin\edit_user($edit['piwik_autologin_userlogin'], $edit['piwik_autologin_password'], $account->uid);
  }
}

/**
 * Implementing hook_user_delete.
 *
 * @param array $account
 *   User to delete's account informations.
 */
function piwik_autologin_user_delete($account) {
  \piwik_autologin\delete_piwik_user($account->uid);
}
